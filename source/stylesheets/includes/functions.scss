@import "vars";

@mixin text-proportion($size, $proportion:$text_proportion, $base: 1em) {
  font-size:$base*$proportion*(6-$size)+1em;
}

@mixin margin-creation($direction, $time) {
  margin-#{$direction}: 10px * $time;
}

@mixin padding-creation($direction, $time) {
  padding-#{$direction}: 10px * $time;
}

@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

@mixin background-gradient($start,$finish){
  background-color: $start;
  background-image: -moz-linear-gradient(top,  $start 0%, $finish 100%);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start), color-stop(100%,$finish));
  background-image: -webkit-linear-gradient(top,  $start 0%,$finish 100%);
  background-image: -o-linear-gradient(top,  $start 0%,$finish 100%);
  background-image: -ms-linear-gradient(top,  $start 0%,$finish 100%);
  background-image: linear-gradient(to bottom,  $start 0%,$finish 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$start}', endColorstr='#{$finish}',GradientType=0 );
}

@mixin background-size($params) {
  -webkit-background-size: $params;
  -moz-background-size: $params;
  background-size: $params;
}

  // $x        Posicion en X
  // $y        Posicion en X
  // $blur     Distancia de difuminacion
  // $spread   Sobre borde
  // $color    Color en Hexa
  // $alpha:1  Alfa del 0-1

@mixin box-shadow($x, $y:"false", $blur:"false", $spread:"false", $color:"false", $alpha:1, $inset:"") {
  @if $y=="false" and $blur=="false" and $spread=="false" and $color=="false" 
  {
    -moz-box-shadow:      $x;
    -webkit-box-shadow:   $x;
    box-shadow:           $x;
  } 
  @else {
    -moz-box-shadow:      $x $y $blur $spread rgba($color, $alpha) #{$inset};
    -webkit-box-shadow:   $x $y $blur $spread rgba($color, $alpha) #{$inset};
    box-shadow:           $x $y $blur $spread rgba($color, $alpha) #{$inset};
  }
}

@mixin inner-box-shadow ($x, $y, $blur, $spread, $color, $alpha:1) {
  -moz-box-shadow:      inset $x $y $blur $spread rgba($color, $alpha);
  -webkit-box-shadow:   inset $x $y $blur $spread rgba($color, $alpha);
  box-shadow:           inset $x $y $blur $spread rgba($color, $alpha);
}

@mixin text-shadow($x, $y:"false", $blur:"false", $color:"false") {
  @if $y=="false" and $blur=="false" and $color=="false" 
  {
    text-shadow: $x;
  }
  @else {
    text-shadow: $x $y $blur $color;
  }

}

@mixin transition($property, $duration: "false", $function: "false"){
  @if $duration == "false" and $function == "false" {
    -webkit-transition: $property;
    -moz-transition:    $property;
    -ms-transition:     $property;
    -o-transition:      $property;
    transition:         $property;
  }
  @else {
    -webkit-transition: $property $duration $function;
    -moz-transition:    $property $duration $function;
    -ms-transition:     $property $duration $function;
    -o-transition:      $property $duration $function;
    transition:         $property $duration $function;
  }
}
// Recibe numero del 0 - 1 
@mixin opacity($value) {
  filter:  alpha(opacity=$value*100);
  opacity: $value;
}

@mixin box-sizing($params) {
  -webkit-box-sizing: $params;
  -moz-box-sizing: $params;
  -ms-box-sizing: $params;
  box-sizing: $params;
}

@mixin border-radius ($topL , $topR:"false" , $bottomR:"false" , $bottomL:"false") {
  @if $topR == "false" and $bottomR == "false" and $bottomL =="false" {
    -webkit-border-radius: $topL;
    -moz-border-radius: $topL;
    -ms-border-radius: $topL;
    -o-border-radius: $topL;
    border-radius: $topL;
  } 
  @else if $topL != "false" and $bottomR == "false" and $bottomL =="false" {
    -webkit-border-radius: $topL $topL $topR $topR;
    -moz-border-radius: $topL $topL $topR $topR;
    -ms-border-radius: $topL $topL $topR $topR;
     border-radius: $topL $topL $topR $topR;  
  } 
  @else if $topL != "false" and $bottomR != "false" and $bottomL =="false" {
    -webkit-border-radius: $topL  $topR  $bottomR $topR;
    -moz-border-radius: $topL $topR $bottomR $topR;
    -ms-border-radius: $topL $topR $bottomR $topR;
    -o-border-radius: $topL $topR $bottomR $topR;
    border-radius: $topL $topR $bottomR $topR;  
  } 
  @else {
    -webkit-border-radius: $topL  $topR  $bottomR $bottomL;
    -moz-border-radius: $topL $topR $bottomR $bottomL;
    -ms-border-radius: $topL $topR $bottomR $bottomL;
    -o-border-radius: $topL $topR $bottomR $bottomL;
    border-radius: $topL $topR $bottomR $bottomL; 
 }
}

@mixin arrow($direction,$size,$color) {
  display: inline-block;
  width: 0; 
  height: 0;
  min-width:0;
  @if $direction == 'top' {
    border-left:    $size solid transparent;
    border-right:   $size solid transparent;
    border-bottom:  $size solid $color;
  } @else if $direction == 'down' {
    border-left:    $size solid transparent;
    border-right:   $size solid transparent;
    border-top:     $size solid $color;
  } @else if $direction == 'right' {
    border-bottom:  $size solid transparent;
    border-top:     $size solid transparent;
    border-left:    $size solid $color;
  } @else {
    border-top:     $size solid transparent;
    border-bottom:  $size solid transparent; 
    border-right:   $size solid $color;
  }
}

@mixin boton($color:white,$bg:$azul,$shadow:$gris_claro) {
  -moz-box-shadow:    none;
  -webkit-box-shadow: none;
  box-shadow: none;
  border: none;
  background: none;
  text-decoration: none;
  display: inline-block;
  padding: 8px 15px;
  background-color: $bg;
  color: $color;
  margin-right: 10px;
  position: relative;
  @include border-radius(5px);
  //@include text-shadow(0,1px,0,#3c3c3c);
  @include box-shadow(0,1px,1px,0,$shadow);
  @include transition(all,400ms,ease);
  &:hover {
    -moz-box-shadow:    none;
    -webkit-box-shadow: none;
    box-shadow: none;
    border: none;
    background: none;
    background-color: darken($bg,10%);
  }
}

@mixin boton-hover($bg_color: $azul, $bg-hover:10% ,$r-after: 10%, $l-after:10%, $r-after-h: 0%, $l-after-h:25%) {
  background-color: $bg_color;
  &:hover {
    background-color: darken($bg_color,$bg-hover);
  }
  &.btn-wicon {
    &:after {
      border-right: lighten($bg_color, $r-after) $border-thin solid;
      border-left: darken($bg_color, $l-after) $border-thin solid;
    }
    &:hover:after {
      border-right: lighten($bg_color, $r-after-h) $border-thin solid;
      border-left: darken($bg_color, $l-after-h) $border-thin solid;
    }
  }
}

@mixin icono-calendario($color: white, $bg:$gris_claro, $shadow:$gris_claro, $size:40px) {
  $radius: ($size/10) + ($size/2);
  background-color: $bg;
  height:     $size;
  line-height: $size;
  width:      $size;
  color: $color; 
  font-size: $size/2;
  margin-left: auto;
  margin-right: auto;
  border: $color $size/10 solid;
  @include box-shadow(0,0,$size/10,0,$shadow);
  @include border-radius($radius);
}

@mixin column-calc($number) {
  width: percentage($number/ $column_number);
  //width: $column-width * $number + ($column_gutter * ($number - 1));
}

@mixin offset-calc($number) {
  margin-left: percentage($number/$column_number);
  //margin-left: $column-width * $number + ($column_gutter * $number) + $column_gutter;
}

@mixin column-system-create($max_width, $column_number, $column_gutter, $prefix:"") {
  .container {
    width: 90%;
    max-width: $max_width;
    margin: 0 auto;
    padding: 0 $column_gutter/2;
  }
  .grid#{$prefix}1,.grid#{$prefix}2,.grid#{$prefix}3,.grid#{$prefix}4,.grid#{$prefix}5,.grid#{$prefix}6,.grid#{$prefix}7,.grid#{$prefix}8,.grid#{$prefix}9,.grid#{$prefix}10,.grid#{$prefix}11,.grid#{$prefix}12,.grid#{$prefix}13,.grid#{$prefix}14,
  .grid#{$prefix}15,.grid#{$prefix}16,.grid#{$prefix}17,.grid#{$prefix}18,.grid#{$prefix}19,.grid#{$prefix}20,.grid#{$prefix}21,.grid#{$prefix}22,.grid#{$prefix}23,.grid#{$prefix}24 {
    float: left;
    min-height: 1px;
    padding: 0 ($column_gutter/2);
    position: relative;
    @include box-sizing(border-box);
  }
  @for $i from 1 through $column_number {
    .grid#{$prefix}#{$i} { @include column-calc($i); }
    .offset#{$prefix}#{$i} { @include offset-calc($i);}
  }
  .row {
    margin: 0 ($column_gutter/2 * -1);
    @include clearfix;
  }
}

@mixin headlines-create($proportion:$text_proportion, $base: 1em) {
  @for $i from 1 through 6 {
    h#{$i} { 
      @include text-proportion($i, $proportion, $base);
      font-weight: $font_normal;
      font-family: $open_sans;
      margin-bottom: 20px;
    }
  }
}
